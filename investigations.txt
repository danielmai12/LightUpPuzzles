The following tables are the average number of nodes generated for playing size field
(6x6, 8x8, 10x10 in lightupPuzzles.txt):
--------------------------------------------------------------------
|   Algorithm   |   Heuristic   |   Puzzle size   |   # of nodes   |
--------------------------------------------------------------------
|   Backtrack   |       H1      |       6x6       |      1976      |
--------------------------------------------------------------------
|   Backtrack   |       H1      |       8x8       |     173720     |
--------------------------------------------------------------------
|   Backtrack   |       H1      |      10x10      |     200016     |
--------------------------------------------------------------------
|   Backtrack   |       H2      |       6x6       |      1170      |
--------------------------------------------------------------------
|   Backtrack   |       H2      |       8x8       |     115030     |
--------------------------------------------------------------------
|   Backtrack   |       H2      |      10x10      |     TimeOut    |
--------------------------------------------------------------------
|   Backtrack   |       H3      |       6x6       |      2462      |
--------------------------------------------------------------------
|   Backtrack   |       H3      |       8x8       |     200008     |
--------------------------------------------------------------------
|   Backtrack   |       H3      |      10x10      |     200018     |
--------------------------------------------------------------------
|    Forward    |       H1      |       6x6       |        1       |
--------------------------------------------------------------------
|    Forward    |       H1      |       8x8       |        9       |
--------------------------------------------------------------------
|    Forward    |       H1      |      10x10      |        56     |
--------------------------------------------------------------------
|    Forward    |       H2      |       6x6       |        1       |
--------------------------------------------------------------------
|    Forward    |       H2      |       8x8       |        3       |
--------------------------------------------------------------------
|    Forward    |       H2      |      10x10      |        3430    |
--------------------------------------------------------------------
|    Forward    |       H3      |       6x6       |        1       |
--------------------------------------------------------------------
|    Forward    |       H3      |       8x8       |        6       |
--------------------------------------------------------------------
|    Forward    |       H3      |      10x10      |        501     |
--------------------------------------------------------------------

The following tables are the average number of nodes  and runtime generated for playing size field
(12x12 but with 12, 24, 48 walls in 12W.txt, 24W.txt, 48W.txt, respectively):

------------------------------------------------------------------------------------
|   Algorithm   |   Heuristic   |     #Walls      |   # of nodes   |   runtime     |
------------------------------------------------------------------------------------
|   Backtrack   |       H1      |       12        |     TimeOut    |    TimeOut    |
------------------------------------------------------------------------------------
|   Backtrack   |       H1      |       24        |     TimeOut    |    TimeOut    |
------------------------------------------------------------------------------------
|   Backtrack   |       H1      |       48        |     TimeOut    |    TimeOut    |
------------------------------------------------------------------------------------
|   Backtrack   |       H2      |       12        |     TimeOut    |    TimeOut    |
------------------------------------------------------------------------------------
|   Backtrack   |       H2      |       24        |     TimeOut    |    TimeOut    |
------------------------------------------------------------------------------------
|   Backtrack   |       H2      |       48        |     TimeOut    |    TimeOut    |
------------------------------------------------------------------------------------
|   Backtrack   |       H3      |       12        |     TimeOut    |    TimeOut    |
------------------------------------------------------------------------------------
|   Backtrack   |       H3      |       24        |     TimeOut    |    TimeOut    |
------------------------------------------------------------------------------------
|   Backtrack   |       H3      |       48        |     TimeOut    |    TimeOut    |
------------------------------------------------------------------------------------
|    Forward    |       H1      |       12        | Time out (500k)|  223.6458439  |
------------------------------------------------------------------------------------
|    Forward    |       H1      |       24        | Time out (500k)|  241.2856581  |
------------------------------------------------------------------------------------
|    Forward    |       H1      |       48        | Time out (500k)|  0.0153059    |
------------------------------------------------------------------------------------
|    Forward    |       H2      |       12        | Time out (500k)|  235.5793259  |
------------------------------------------------------------------------------------
|    Forward    |       H2      |       24        | Time out (500k)|  292.7051255  |
------------------------------------------------------------------------------------
|    Forward    |       H2      |       48        |      48        |  0.0349233    |
------------------------------------------------------------------------------------
|    Forward    |       H3      |       12        |Time out (500k) |  235.5793259  |
------------------------------------------------------------------------------------
|    Forward    |       H3      |       24        |      55        |  0.0398933    |
------------------------------------------------------------------------------------
|    Forward    |       H3      |       48        |      14        |  0.014955     |
------------------------------------------------------------------------------------


** Summary for Backtrack **
Overall, the backtracking algorithm performs poorly compared to forward checking algorithm and with board size large enough (12),
most of the time, it is timeout for backtracking algorithm.

There is an update for backtracking algorithm is that we use the trivial solver to help fill in any place that has number of available
neighbors equal to the number of the wall immediately, which helps to solve 8x8 and 10x10 faster (not time out) in this case

** Summary for Forward Checking **
On average, the runtime is H3 < H1 < H2. This implementation of forward checking can handle up to 10x10 with high probability of
success. However, on larger puzzle size, the chance of the searching algorithm times out is proportionally higher.

Number of walls on a puzzle, as well as wall value distribution has significant impact on running time. On a same puzzle size, as the
number of wall increases, the number of empty cells decreases linearly, which leads to less branching. Also, more walls means more
constraints and therefore, less options to branch to. Similarly, if wall of value 0, 4 and 3 appears with high possibility, more empty
cells are ruled out (its domain of value decrease to 1), which also improve running time for the same reason.

Pre-processing the puzzle for trivia answers also contribute greatly in reducing running time. Preprocessing reduces the number of empty
cells to consider. In tandem with forward checking and constraint propagation it also reduces the value domain of unsolved cells.

There is also a factor of randomness in the implementation, as some large puzzle tends to time-out most of the attempts, but could be solved
in a small portion of attempts. Similarly, some puzzle sometimes require a significantly higher number of node to solve than usual. This
has to do with the randomly chosen of the next candidate, as some candidate leads to an answer while other leads to dead-end. Therefore,
probability distribution between feasible candidates and infeasible candidates is also a factor to consider


*** No bugs found or detected - results are correct ***
